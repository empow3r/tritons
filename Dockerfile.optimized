# Multi-stage build for speed and size optimization
FROM node:20-alpine AS dependencies
WORKDIR /app
COPY package*.json ./
RUN npm ci --only=production

FROM node:20-alpine AS build-dependencies
WORKDIR /app
COPY package*.json ./
RUN npm ci

FROM node:20-alpine AS builder
WORKDIR /app
COPY . .
COPY --from=build-dependencies /app/node_modules ./node_modules
RUN npm run build 2>/dev/null || echo "No build step"

# Final slim image
FROM node:20-alpine
RUN apk add --no-cache \
    curl \
    bash \
    && rm -rf /var/cache/apk/*

WORKDIR /app

# Copy only production dependencies
COPY --from=dependencies /app/node_modules ./node_modules
# Copy built application
COPY --from=builder /app .

# Create directories
RUN mkdir -p /app/data /app/state /app/shared /app/output /app/logs

# Runtime user for security
RUN addgroup -g 1001 -S nodejs && adduser -S nodejs -u 1001
USER nodejs

EXPOSE 8081 8082 41234/udp 41235 6081 6082

HEALTHCHECK --interval=30s --timeout=3s --retries=3 \
  CMD node -e "process.exit(0)" || exit 1

CMD ["node", "core/enhanced-swarm-orchestrator.js"]